1.ETCD Beginner :-
================
To store abd get the key value from etcd database
#/etcdctl set key1 value1
#/etcdctl get key1

#kubectl get pods -n kube-system

ETCDCTL is the CLI tool used to interact with ETCD.
ETCDCTL can interact with ETCD Server using 2 API versions - Version 2 and Version 3.  By default its set to use Version 2. 
Each version has different sets of commands.

For example ETCDCTL version 2 supports the following commands:
etcdctl backup
etcdctl cluster-health
etcdctl mk
etcdctl mkdir
etcdctl set

Whereas the commands are different in version 3:
etcdctl snapshot save 
etcdctl endpoint health
etcdctl get
etcdctl put

To set the right version of API set the environment variable ETCDCTL_API command
export ETCDCTL_API=3

Apart from that, you must also specify path to certificate files so that ETCDCTL can authenticate to the ETCD API Server. The certificate files are available in the etcd-master at the following path. We discuss more about certificates in the security section of this course. So don't worry if this looks complex:

--cacert /etc/kubernetes/pki/etcd/ca.crt     
--cert /etc/kubernetes/pki/etcd/server.crt     
--key /etc/kubernetes/pki/etcd/server.key


So for the commands I showed in the previous video to work you must specify the ETCDCTL API version and path to certificate files. Below is the final form:

kubectl exec etcd-master -n kube-system -- sh -c "ETCDCTL_API=3 etcdctl get / --prefix --keys-only --limit=10 --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt  --key /etc/kubernetes/pki/etcd/server.key" 


2.Kube API Server :
================
Kube API server is only component to interact with ETCD and get the date . Below flow for creating POD.

1.Authenticate User 
2.Validate Request
3.Reterive Data
4.Updaet ETCD
5.Scheduler
6.Kubelet

If you want to run the command kubcetl get nods ===> 1.will go to API for authenication 2.Once authenticated API will ask ECTD  3.ETC retive the data and share it to API.

To view the kube API service :-
kubcetl get pods -n kube-system
cat /etc/kubernetes/mainfests/kube-apiservers.yaml
cat /etc/systemd/system/kube-apiservers.service


3.Kube Control Manager :
======================
To monitor the entire system and in case any failure to bring into desire state  for example :-
Node Controller ==> Check the status of every 5s of each node and in case any issue remove pod and provising healthy node.
Replication Controller ==> Ensure desire no of replication available all the time. 

PS :- By default all the controller are enabled and we can choose which one want to enable or disable.

Kube Admin :-
kubcetl  get pods -n kube-system
cat /etc/kubernetes/mainfests/kube-controlle-manager.yaml

4.Kube Scheduler :
================
Scheduler only decide which pods goes where ( Try to find which node fit for these pod like CPU/Memeory resouces)
Scheduler will rank nodes and will place the pod accrodingly .

cat /etc/kubernetes/mainfests/kube-scheduler.yaml
ps -aux | grep kube-scheduler

5.Kubelet :
===========
Capatain on the ship
 
6.Kube Proxy :
============
Its a process and runing on each node and ensure communication between all the nodes and pods .
Create IP table each node and forward to each node


